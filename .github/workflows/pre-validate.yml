name: "Pre Validate"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - "3306:3306"
        env:
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
    env:
      RAILS_ENV: test
      DB_USER: root
      DB_PASSWORD: password
      DB_HOST: 127.0.0.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch_depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Set up database schema
        run: |
          export RAILS_ENV=test
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run tests with coverage reports
        run: |
          export COVERAGE=true
          bin/rake

      - name: Print Coverage Report(DEBUG)
        run: cat coverage/coverage.json

      - name: Fix coverage path
        working-directory: ./coverage
        run: |
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' .resultset.json

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=fiap-tech-challenge-soat1
            -Dsonar.projectKey=fiap-tech-challenge-soat1_fiap-tech-challenge-1-producao
            -Dsonar.sources=.
            -Dsonar.language=ruby
            -Dsonar.exclusions=**/*_spec.rb,spec/**/*,config/**/*,vendor/**/*
            -Dsonar.verbose=true
            -Dsonar.ruby.coverage.reportPaths=coverage/coverage.json
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          SONAR_SCANNER_OPTS: --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundle exec bundler-audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t producao-service-tech-challenge:$GITHUB_SHA .
